- title(rand(100) == 0 ? @run.name.gsub("Star Fox Adventures", "Stair Fax Temperatures") : @run.name)
= render partial: 'twitter_card'

- content_for(:header) do
  h3
    - if @run.game.try(:name).present? && @run.category.try(:name).present?
      = link_to @run.game, game_path(@run.game), class: 'stealth-link game-link'
      =< link_to @run.category, game_category_path(@run.game, @run.category), class: 'stealth-link category-link'
    - else
      = @run.name
  h5
    .time.needs-formatting = @run.time
    - if @run.user.try(:name)
      small by #{link_to @run.user, user_path(@run.user), class: 'stealth-link user-link'}
  h6
    ul.run-options
      li
        a href=run_path(@run) &larr; back to run

#timeline data-turbolinks-permanent=true
  = render partial: 'timeline', locals: {run: @run}
  - unless @run.splits.any? { |split| split.skipped? }
    = render partial: 'gold_timeline', locals: {run: @run}

article#game-category data-turbolinks-permanent=true
  = form_for @run, as: :run, remote: true, url: run_path(@run) do |f|
    h3 Game/category
    p
      = f.collection_select(:game, Game.where.not(shortname: nil).order(:name), :shortname, :name, {selected: @run.game.try(:shortname), include_blank: true}, onchange: 'update_category_selector(this.value)')
      = f.collection_select(:category, @run.game.try(:categories) || [], :id, :name, selected: @run.category.try(:id))
    p = f.submit 'Save', id: 'game_category_submit', class: 'btn btn-default'

article#proof data-turbolinks-permanent=true
  = form_for @run, as: :run, remote: true, url: run_path(@run) do |f|
    h3 Video proof
    .input-group.col-md-6
      = f.text_field(:video_url, class: 'form-control', placeholder: 'URL for a Twitch, Hitbox, or YouTube VOD')
      span.input-group-btn
        = f.submit 'Save', class: 'btn btn-default'

article#srdc-url data-turbolinks-permanent=true
  = form_for @run, as: :run, remote: true, url: run_path(@run) do |f|
    h3 Link with speedrun.com
    .input-group.col-md-6
      = f.text_field(:srdc_url, class: 'form-control', placeholder: 'URL for your run on speedrun.com')
      span.input-group-btn
        = f.submit 'Save', class: 'btn btn-default'

article#danger-zone.danger data-turbolinks-permanent=true
  h3 Danger zone
  .row
    .col-md-6
      h4 Delete
      p
        | Existing permalinks will be permanently broken and your run, its information, and the original file will all be destroyed. The URL 
        code #{run_url(@run).split('//')[1]}
        |  will never be reclaimed.
    .col-md-6
      h4 Disown
      p The run will continue to exist and be accessible, but it will no longer be attributed to you. It will appear as
        anonymously uploaded.
      p If you disown a run, you will never be able to reclaim it, and consequently you will not be able to delete it at
        a later time.
    .col-md-6
      center
        = button_to run_path(@run), method: :delete, data: {confirm: "Really delete your #{@run.name} run?"}, class: 'button btn btn-danger', style: 'margin: 1em;'
          div
            big Delete
          small
            = "#{@run.name} in "
            span.time.needs-formatting = @run.time
    .col-md-6
      center
        = button_to run_path(@run), method: :patch, data: {confirm: "Really disown your #{@run.name} run?"}, params: {'run[disown]' => true}, class: 'button btn btn-danger-inverted', style: 'margin: 1em;'
          div
            big Disown
          small
            = "#{@run.name} in "
            span.time.needs-formatting = @run.time
